{"ast":null,"code":"var _jsxFileName = \"E:\\\\LocalMart\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { USER_UPDATE_PROFILE_RESET } from '../Constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const dispatch = useDispatch();\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!user) {\n      // dispatch({type:})\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      if (userInfo) dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n\n    console.log({\n      successUpdate,\n      errorUpdate,\n      loadingUpdate\n    });\n  }, [dispatch, user, userInfo]);\n\n  const submitHandler = event => {\n    event.preventDefault(); //TODO\n\n    if (password !== confirmPassword) alert('Password and Confirm Password not matched');else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"success\",\n          children: \"Profile Updated Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"EcBTDqms3YMLboujPl6z89/LDzc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["E:/LocalMart/frontend/src/screens/ProfileScreen.js"],"names":["useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","type","_id","console","log","submitHandler","event","preventDefault","alert","userId","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_UPDATE_PROFILE_RESET } from '../Constants/userConstants';\r\n\r\nexport default  function ProfileScreen(){\r\n   const [name,setName]=useState('');\r\n   const [email,setEmail]=useState('');\r\n   const [password,setPassword]=useState('');\r\n   const [confirmPassword,setConfirmPassword]=useState('');\r\n\r\n    const dispatch=useDispatch();\r\n    const userSignin=useSelector(state=>state.userSignin);\r\n    const {userInfo}=userSignin;\r\n    const userDetails=useSelector(state=>state.userDetails);\r\n    const {loading,error,user}=userDetails;\r\n\r\n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile);\r\n    const {success:successUpdate,error:errorUpdate,loading:loadingUpdate}=userUpdateProfile;\r\n    useEffect(()=>{\r\n       if(!user){\r\n       // dispatch({type:})\r\n       dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n       if(userInfo) dispatch(detailsUser(userInfo._id));\r\n\r\n       }\r\n       else{\r\n           setName(user.name);\r\n           setEmail(user.email);\r\n       }\r\n       console.log({successUpdate,errorUpdate,loadingUpdate});\r\n    },[dispatch, user, userInfo]);\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        //TODO\r\n        if(password!==confirmPassword)\r\n        alert('Password and Confirm Password not matched');\r\n        else{\r\n            dispatch(updateUserProfile({userId:user._id,\r\n                name,email,password\r\n            }));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n           <form className=\"form\" onSubmit={submitHandler}>\r\n               <div><h1>User Profile</h1></div>\r\n               {\r\n                   loading?<LoadingBox></LoadingBox> :\r\n                   error?<MessageBox variant='danger'>{errorUpdate}</MessageBox> :\r\n                   <>\r\n                 \r\n                {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && <MessageBox variant='danger'>{errorUpdate}</MessageBox>}\r\n                {successUpdate && <MessageBox variant='success'>Profile Updated Successfully</MessageBox>}\r\n                       <div>\r\n                           <label htmlfor='name'>Name</label>\r\n                           <input id='name' type='text' \r\n                             placeholder='Enter name' value={name}\r\n                             onChange={(e)=>setName(e.target.value)}\r\n                             >\r\n                            </input>  \r\n                       </div>\r\n                       <div>\r\n                           <label htmlfor='email'>Email</label>\r\n                           <input id='email' type='email' \r\n                             placeholder='Enter email' value={email}\r\n                             onChange={(e)=>setEmail(e.target.value)}\r\n                             >\r\n                            </input>  \r\n                       </div>\r\n                       <div>\r\n                           <label htmlfor='password'>Password</label>\r\n                           <input id='password' type='password' \r\n                             placeholder='Enter Password'\r\n                             onChange={(e)=>setPassword(e.target.value)}\r\n                             >\r\n                            </input>  \r\n                       </div>\r\n                       <div>\r\n                           <label htmlfor='confirmPassword'>Confirm Password</label>\r\n                           <input id='confirmPassword' type='password' \r\n                             placeholder='Confirm Password'\r\n                             onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                              >\r\n                            </input>  \r\n                       </div>\r\n                      <div>\r\n                          <label/>\r\n                          <button className='primary' type='submit'>\r\n                              Update\r\n                          </button>\r\n                      </div>\r\n\r\n                   </>\r\n               }\r\n           </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}