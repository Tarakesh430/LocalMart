{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/productConstants\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState;\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/LocalMart/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,oBAAtD,EAA4EC,uBAA5E,EAAqGC,uBAArG,EAA8HC,iBAA9H,EAAiJC,oBAAjJ,EAAuKC,oBAAvK,QAAmM,+BAAnM;AAEA,OAAO,MAAMC,YAAY,GAAC,MAAI,MAAMC,QAAN,IAAiB;AAC3CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ;AADA,GAAD,CAAR;;AAGA,MAAG;AACC,UAAM;AAACK,MAAAA;AAAD,QAAO,MAAMZ,KAAK,CAACa,GAAN,CAAU,eAAV,CAAnB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACH,oBAAN;AAA2BM,MAAAA,OAAO,EAACF;AAAnC,KAAD,CAAR;AACH,GAHD,CAGC,OAAMG,KAAN,EAAY;AACTL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACL,iBAAN;AAAwBQ,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAtC,KAAD,CAAR;AACH;AACJ,CAVM;AAWP,OAAO,MAAMC,cAAc,GAAEC,SAAD,IAAa,MAAMR,QAAN,IAAiB;AACvDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACP,uBAAN;AAA8BU,IAAAA,OAAO,EAACI;AAAtC,GAAD,CAAR;;AACA,MAAG;AACA,UAAM;AAACN,MAAAA;AAAD,QAAO,MAAMZ,KAAK,CAACa,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAAnB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,uBAAN;AAA8BS,MAAAA,OAAO,EAACF;AAAtC,KAAD,CAAR;AACF,GAHD,CAIA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR,oBAAN;AACRW,MAAAA,OAAO,EAACC,KAAK,CAACI,QAAN,IACPJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADb,GAELD,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAFf,GAEuBD,KAAK,CAACC;AAH7B,KAAD,CAAR;AAIH;AACH,CAZM;;AAaP,MAAMI,aAAa,GAAC,MAAI,OAAMV,QAAN,EAAeW,QAAf,KAA0B;AAC9CX,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACT;AAAN,GAAD,CAAR;AACA,QAAM;AAACoB,IAAAA,UAAU,EAAC;AAACC,MAAAA;AAAD;AAAZ,MAAwBF,QAA9B;;AACA,MAAG;AACC,UAAM;AAACT,MAAAA;AAAD,QAAO,MAAMZ,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA2B,EAA3B,EAA8B;AAC7CC,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAE,UAASH,QAAQ,CAACI,KAAM;AAAxC;AADqC,KAA9B,CAAnB;AAGH,GAJD,CAIC,OAAMZ,KAAN,EAAY;AACTL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACV,mBAAN;AACLa,MAAAA,OAAO,EAACC,KAAK,CAACI,QAAN,IACPJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADb,GAELD,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAFf,GAEuBD,KAAK,CAACC;AAHhC,KAAD,CAAR;AAIH;AACJ,CAbD","sourcesContent":["import Axios from \"axios\";\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/productConstants\"\r\n\r\nexport const listProducts=()=>async(dispatch)=>{\r\n    dispatch({\r\n        type:PRODUCT_LIST_REQUEST\r\n    });\r\n    try{\r\n        const {data}=await Axios.get('/api/products');\r\n        dispatch({type:PRODUCT_LIST_SUCCESS,payload:data});\r\n    }catch(error){\r\n        dispatch({type:PRODUCT_LIST_FAIL,payload:error.message});\r\n    }\r\n}\r\nexport const detailsProduct=(productId)=>async(dispatch)=>{\r\n   dispatch({type:PRODUCT_DETAILS_REQUEST,payload:productId});\r\n   try{\r\n      const {data}=await Axios.get(`/api/products/${productId}`);\r\n      dispatch({type:PRODUCT_DETAILS_SUCCESS,payload:data});\r\n   }\r\n   catch(error){\r\n       dispatch({type:PRODUCT_DETAILS_FAIL,\r\n        payload:error.response &&\r\n         error.response.data.message\r\n         ? error.response.data.message:error.message});\r\n   }\r\n}\r\nconst createProduct=()=>async(dispatch,getState)=>{\r\n    dispatch({type:PRODUCT_CREATE_REQUEST});\r\n    const {userSignin:{userInfo}}=getState;\r\n    try{\r\n        const {data}=await Axios.post('/api/products',{},{\r\n            headers:{Authorization:`Bearer ${userInfo.token}`},\r\n        })\r\n    }catch(error){\r\n        dispatch({type:PRODUCT_CREATE_FAIL,\r\n            payload:error.response &&\r\n             error.response.data.message\r\n             ? error.response.data.message:error.message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}