{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../Constants/userConstants\";\nexport const signin = (email, password) => async (dispatch, getState) => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/LocalMart/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","getState","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAwEC,kBAAxE,EAA4FC,qBAA5F,EAAmHC,qBAAnH,EAA0IC,gBAA1I,EAA4JC,mBAA5J,EAAiLC,mBAAjL,EAAsMC,YAAtM,QAA0N,4BAA1N;AAEC,OAAO,MAAMC,MAAM,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB,OAAMC,QAAN,EAAeC,QAAf,KAA0B;AAC5DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACR,mBAAN;AAA0BS,IAAAA,OAAO,EAAC;AAACL,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAAlC,GAAD,CAAR;;AACA,MAAG;AACD,UAAM;AAACK,MAAAA;AAAD,QAAO,MAAMlB,KAAK,CAACmB,IAAN,CAAW,mBAAX,EAA+B;AAACP,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA/B,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP,mBAAN;AAA0BQ,MAAAA,OAAO,EAACC;AAAlC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;AACD,GAJD,CAKA,OAAMM,KAAN,EAAY;AACVV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACT,gBADA;AAELU,MAAAA,OAAO,EAAGO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GAA8CF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAlE,GAA4EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAID;AACJ,CAbM;AAcP,OAAO,MAAMC,OAAO,GAAC,MAAKb,QAAD,IAAY;AACjCM,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,iBAAxB;AACAd,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACN;AAAN,GAAD,CAAR;AACH,CALM;AAMP,OAAO,MAAMmB,QAAQ,GAAC,CAACC,IAAD,EAAMlB,KAAN,EAAYC,QAAZ,KAAuB,OAAMC,QAAN,EAAeC,QAAf,KAA0B;AACtED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACX,qBAAN;AAA4BY,IAAAA,OAAO,EAAC;AAACa,MAAAA,IAAD;AAAMlB,MAAAA,KAAN;AAAYC,MAAAA;AAAZ;AAApC,GAAD,CAAR;;AACA,MAAG;AACD,UAAM;AAACK,MAAAA;AAAD,QAAO,MAAMlB,KAAK,CAACmB,IAAN,CAAW,qBAAX,EAAiC;AAACW,MAAAA,IAAD;AAAMlB,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAAjC,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACV,qBAAN;AAA4BW,MAAAA,OAAO,EAACC;AAApC,KAAD,CAAR;AACAJ,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP,mBAAN;AAA0BQ,MAAAA,OAAO,EAACC;AAAlC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;AACD,GALD,CAMA,OAAMM,KAAN,EAAY;AACVV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACZ,kBADA;AAELa,MAAAA,OAAO,EAAGO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GAA8CF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAlE,GAA4EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAID;AACF,CAdO;AAeR,OAAO,MAAMK,WAAW,GAAEC,MAAD,IAAU,OAAMlB,QAAN,EAAeC,QAAf,KAA0B;AAC3DD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACd,oBAAN;AAA2Be,IAAAA,OAAO,EAACe;AAAnC,GAAD,CAAR;AACA,QAAO;AAACC,IAAAA,UAAU,EAAC;AAACC,MAAAA;AAAD;AAAZ,MAAwBnB,QAAQ,EAAvC;;AACA,MAAG;AACD,UAAM;AAACG,MAAAA;AAAD,QAAO,MAAMlB,KAAK,CAACmC,GAAN,CAAW,cAAaH,MAAO,EAA/B,EAAiC;AAClDI,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAE,UAASH,QAAQ,CAACI,KAAM;AAAxC;AAD0C,KAAjC,CAAnB;AAGAxB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACb,oBAAN;AAA2Bc,MAAAA,OAAO,EAACC;AAAnC,KAAD,CAAR;AACD,GALD,CAKC,OAAMM,KAAN,EAAY;AACXV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACf,iBAAN;AACPgB,MAAAA,OAAO,EAAGO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GAA8CF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAlE,GAA4EF,KAAK,CAACE;AADrF,KAAD,CAAR;AAGH;AACA,CAbM","sourcesContent":["import Axios from \"axios\";\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../Constants/userConstants\"\r\n\r\n export const signin=(email,password)=>async(dispatch,getState)=>{\r\n     dispatch({type:USER_SIGNIN_REQUEST,payload:{email,password}});\r\n     try{\r\n       const {data}=await Axios.post('/api/users/signin',{email,password});\r\n       dispatch({type:USER_SIGNIN_SUCCESS,payload:data});\r\n       localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n     }\r\n     catch(error){\r\n       dispatch({\r\n           type:USER_SIGNIN_FAIL,\r\n           payload : error.response && error.response.data.message?error.response.data.message : error.message,\r\n       });\r\n     }\r\n }\r\n export const signout=()=>(dispatch)=>{\r\n     localStorage.removeItem('userInfo');\r\n     localStorage.removeItem('cartItems');\r\n     localStorage.removeItem('shippingAddress');\r\n     dispatch({type:USER_SIGNOUT});\r\n }\r\n export const register=(name,email,password)=>async(dispatch,getState)=>{\r\n  dispatch({type:USER_REGISTER_REQUEST,payload:{name,email,password}});\r\n  try{\r\n    const {data}=await Axios.post('/api/users/register',{name,email,password});\r\n    dispatch({type:USER_REGISTER_SUCCESS,payload:data});\r\n    dispatch({type:USER_SIGNIN_SUCCESS,payload:data});\r\n    localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n  }\r\n  catch(error){\r\n    dispatch({\r\n        type:USER_REGISTER_FAIL,\r\n        payload : error.response && error.response.data.message?error.response.data.message : error.message,\r\n    });\r\n  }\r\n}\r\nexport const detailsUser=(userId)=>async(dispatch,getState)=>{\r\n  dispatch({type:USER_DETAILS_REQUEST,payload:userId});\r\n  const  {userSignin:{userInfo}}=getState();\r\n  try{\r\n    const {data}=await Axios.get(`/api/users/${userId}`,{\r\n      headers:{Authorization:`Bearer ${userInfo.token}`}\r\n    });\r\n    dispatch({type:USER_DETAILS_SUCCESS,payload:data});\r\n  }catch(error){\r\n    dispatch({type:USER_DETAILS_FAIL,\r\n      payload : error.response && error.response.data.message?error.response.data.message : error.message,\r\n    });\r\n}\r\n};"]},"metadata":{},"sourceType":"module"}