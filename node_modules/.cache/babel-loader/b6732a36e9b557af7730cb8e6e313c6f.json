{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../Constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/LocalMart/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KAA+B;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAACF,MAAM,CAACG,OAAlB;AACA,YAAMC,SAAS,GAACN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAAzC,CAAhB;;AACA,UAAGH,SAAH,EAAa;AACT,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAA8BL,IAA9B,GAAmCI,CAA1D;AAFP,SAAP;AAIH,OALD,MAKK;AACD,eAAO,EACH,GAAGR,KADA;AAEHC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAFP,SAAP;AAIH;;AACL,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYP,MAAM,CAACG,OAA7C;AAFP,OAAP;;AAIJ;AACI,aAAOL,KAAP;AArBR;AAuBH,CAxBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../Constants/cartConstants\";\r\n\r\nexport const cartReducer=(state={cartItems:[]},action)=>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item=action.payload;\r\n            const existItem=state.cartItems.find(x=>x.product===item.product);\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems:state.cartItems.map(x=>x.product===existItem.product?item:x),\r\n                };\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item]\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x=>x.product!==action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}